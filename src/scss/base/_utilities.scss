/*****************
*
* DISPLAYS
*
******************/
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

.justify-content-center {
    justify-content: center;
}

.justify-content-end {
    justify-content: end;
}

.align-items-center {
    align-items: center;
}

.align-items-end {
    align-items: flex-end;
}

.justify-self-center {
    justify-self: center;
}

.align-self-center {
    align-self: center;
}

.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-wrap {
    flex-wrap: wrap;
}

// Grid
.d-grid {
    display: grid;
}

.grid-row-start-1 {
    grid-row-start: 1;
}

.grid-row-start-2 {
    grid-row-start: 2;
}

/*****************
*
* HEIGHTS & WIDTHS
*
******************/

.vh-100 {
    height: 100vh;
}

.h-100 {
    height: 100%;
}

.w-100 {
    width: 100%;
}

/*****************
*
* BORDERS
*
******************/
.border-rounded-10 {
    border-radius: 10px;
}

/*****************
*
* POSITIONS
*
******************/
.position-relative {
    position: relative;
}

.position-sticky {
    position: sticky;
}

.position-fixed {
    position: fixed;
}

.top-0 {
    top: 0;
}

.bottom-0 {
    bottom: 0;
}

.left-0 {
    left: 0;
}

.right-0 {
    right: 0;
}

/*****************
*
* SPACINGS
*
******************/
// Sizes
$sizes: (
    0,
    2,
    4,
    8,
    12,
    16,
    20,
    24,
    28,
    32,
    36,
    40,
    44,
    48,
    52,
    56,
    60,
    64,
    68
);

.mx-auto {
    margin: 0 auto;
}

.my-auto {
    margin: auto 0;
}

@each $size in $sizes {
    $newSize: toRem($size);

    // gaps
    .gap-#{$size} {
        gap: $newSize;
    }

    // paddings
    .p-#{$size} {
        padding: $newSize;
    }

    .pt-#{$size} {
        padding-top: $newSize;
    }

    .pb-#{$size} {
        padding-bottom: $newSize;
    }

    .pl-#{$size} {
        padding-left: $newSize;
    }

    .pr-#{$size} {
        padding-right: $newSize;
    }

    .px-#{$size} {
        padding-right: $newSize;
        padding-left: $newSize;
    }

    .py-#{$size} {
        padding-top: $newSize;
        padding-bottom: $newSize;
    }

    // margins
    .m-#{$size} {
        margin: $newSize;
    }

    .mt-#{$size} {
        margin-top: $newSize;
    }

    .mb-#{$size} {
        margin-bottom: $newSize;
    }

    .ml-#{$size} {
        margin-left: $newSize;
    }

    .mr-#{$size} {
        margin-right: $newSize;
    }

    .mx-#{$size} {
        margin-right: $newSize;
        margin-left: $newSize;
    }

    .my-#{$size} {
        margin-top: $newSize;
        margin-bottom: $newSize;
    }
}

/*****************
*
* TYPOGRAPHY
*
******************/
.heading,
.sub-heading {
    font-family: var(--display-font-family);
}

.heading {
    font-size: var(--heading-font-size);
    line-height: 0.8em;
    color: var(--primary-color);
}

.sub-heading {
    font-size: var(--sub-heading-font-size);
    line-height: 1em;
    color: var(--secondary-color)
}

.text-center {
    text-align: center;
}

/*****************
*
* BGs
*
******************/
$bg-map: (
    'white': $white,
    'black': $black,
    'gray-50': $gray-50,
    'gray-200': $gray-200,
    'gray-500': $gray-500
);

@each $name,
$value in $bg-map {
    .bg-#{$name} {
        background-color: $value;
    }
}

.bg-blur {
    backdrop-filter: blur(10px);
}

.border-top {
    border-top: 1px solid $white;
}

.fade-in-up {
    -webkit-animation: fadeInUp 1s forwards;
    -moz-animation: fadeInUp 1s forwards;
    animation: fadeInUp 1s forwards;
}

@-webkit-keyframes fadeInUp {
    from {
        opacity: 0;
        -webkit-transform: translate(0, 1rem);
        transform: translate(0, 1rem);
    }

    to {
        opacity: 1;
        -webkit-transform: translate(0, 0);
        transform: translate(0, 0);
    }
}

@-moz-keyframes fadeInUp {
    from {
        opacity: 0;
        -moz-transform: translate(0, 1rem);
        transform: translate(0, 1rem);
    }

    to {
        opacity: 1;
        -moz-transform: translate(0, 0);
        transform: translate(0, 0);
    }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translate(0, 1rem);
    }

    to {
        opacity: 1;
        transform: translate(0, 0);
    }
}